<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.en.xsl"?>
<!-- $LastChangedRevision: 396609 $ -->

<!--
 Copyright 2002-2005 The Apache Software Foundation or its licensors, as
 applicable.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mpm_winnt.xml.meta">

<name>mpm_winnt</name>
<description>This Multi-Processing Module is optimized for Windows
NT.</description>
<status>MPM</status>
<sourcefile>mpm_winnt.c</sourcefile>
<identifier>mpm_winnt_module</identifier>

<summary>
    <p>This Multi-Processing Module (MPM) is the default for the
    Windows NT operating systems. It uses a single control process
    which launches a single child process which in turn creates
    threads to handle requests</p>
</summary>

<directivesynopsis location="mpm_common"><name>CoreDumpDirectory</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>PidFile</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>Listen</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ListenBacklog</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxRequestsPerChild</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxMemFree</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ScoreBoardFile</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ReceiveBufferSize</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>SendBufferSize</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ThreadLimit</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ThreadsPerChild</name>
</directivesynopsis>

<directivesynopsis>
<name>Win32DisableAcceptEx</name>
<description>Use accept() rather than AcceptEx() to accept network connections</description>
<syntax>Win32DisableAcceptEx</syntax>
<default>AcceptEx() is enabled by default. Use this directive to disable use of
    AcceptEx()</default>
<contextlist><context>server config</context></contextlist>
<compatibility>Available in Version 2.0.49 and later</compatibility>

<usage>
    <p><code>AcceptEx()</code> is a Microsoft WinSock v2 API that provides
    some performance improvements over the use of the BSD style
    <code>accept()</code> API in certain circumstances. Some popular Windows
    products, typically virus scanning or virtual private network
    packages, have bugs that interfere with the proper operation of
    <code>AcceptEx()</code>. If you encounter an error condition like:</p>

    <example>
        [error] (730038)An operation was attempted on something that is
        not a socket.: winnt_accept: AcceptEx failed. Attempting to recover.
    </example>

    <p>you should use this directive to disable the use of
    <code>AcceptEx()</code>.</p>
</usage>
</directivesynopsis>

</modulesynopsis>
